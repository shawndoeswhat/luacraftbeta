name: Release Workflow

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.1

      - name: Download project-poseidon-1.1.10.jar and luaj-jse-3.0.2.jar
        run: |
          mkdir -p ./jars
          curl -L -o ./jars/project-poseidon-1.1.10.jar https://github.com/retromcorg/Project-Poseidon/releases/download/1.1.10-250328-1731-f67a8e3/project-poseidon-1.1.10.jar
          curl -L -o ./jars/luaj-jse-3.0.2.jar https://github.com/luaj/luaj/releases/download/v3.0.2/luaj-jse-3.0.2.jar

      - name: Install JAR files to local Maven repository
        run: |
          mvn install:install-file -Dfile=./jars/project-poseidon-1.1.10.jar -DgroupId=com.legacyminecraft.poseidon -DartifactId=poseidon-craftbukkit -Dversion=1.1.10 -Dpackaging=jar
          mvn install:install-file -Dfile=./jars/luaj-jse-3.0.2.jar -DgroupId=org.luaj -DartifactId=luaj-jse -Dversion=3.0.2 -Dpackaging=jar

      - name: Get the version from pom.xml
        id: get_version
        run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Fail if snapshot version
        run: |
          if [[ $PROJECT_VERSION == *"-SNAPSHOT"* ]]; then
            echo "Snapshot versions are not releasable"
            exit 0
          fi

      - name: Build with Maven
        run: mvn clean package

      - name: Create GitHub Release
        if: ${{ !endsWith(env.PROJECT_VERSION, '-SNAPSHOT') }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.PROJECT_VERSION }}
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
